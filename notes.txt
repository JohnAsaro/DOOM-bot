
0 - see if you can improve overhead by completely not including ANY visual info


1 - account for friction, friction is found here  (https://github.com/0dot0repeating/quakemovement) 

1.1 ISSUE RN IS THAT WE ACTUALLY HAVE AN ACCURATE WAY TO PREDICT IT WHEN FACING ANGLE 0, BUT WE DO NOT ACCOUNT FOR ANGLE IN OUR PREDICTIONS
1.2 ANOTHER ISSUE IS THAT WE ONLY EITHER UPDATE VELOCITY X OR VELOCITY Y, NEVER BOTH AT ONCE
^ I would like to test this but I am pretty sure thats accurate, probably can test this in my test map

I think what you need to do is simulate each move an amount of times equal to the frameskip, 
/\ which requires refactoring simulate move 
When doing this, we can account for walls, to make predictions more accurate, 
also, we can account for each pheremone passed in this process, so like if we stop at a wall at the second
refeeding of the simulate move function, and we a have a frameskip of 4, a move that makes us cover more distance is 
going to be proritized over one that runs us into a wall. this hopefully will add a little bit of an incentive for ants to cover
more ground, and also will gut running into walls even more. WE SHOULD NOT INTERPOLATE BETWEEN THESE GAPS THOUGH, THAT KILLS
THE WHOLE POINT OF FRAMESKIP, ONLY CONSIDER THE FRAMESKIP AMOUNT OF STEPS TAKEN.

1.3 - create an updated enviornment that does everything the same but now tracks the accuracy of a given move (like idk how we classify it, maybe like "hits" (exact predictions), "near misses" (almost there) and "misses" (completely off)

2 - because the velocity and frameskip might make the steps big, 
we now need to account for the alpha and beta in the entire path taken in a given step, 
as soon as that step hits a wall, cut it off

3 - figure out how the distance from spawn to goal and time hueristic are being calculated, how much of a boost is it, 
which one is proirtized more (tbh I forgot how its calculated lol)

4 - do a test with varying amount of time/spawn to goal distance hueristic

5 - okay maybe this isnt prority 5 but there is something to be said about maybe increasing pheremone deposit for sucessful paths

6 - a HUGE change we could do is getting rid of the random spawn and maybe even the angle, and then just seeing if the optimization works. 