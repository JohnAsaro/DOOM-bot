env = mywayhome_VZG(config_path=doomfinder("my_way_home_4_dir.cfg"), pheromone_evaporation_rate=0.00003968253, render=False, frameskip=4) #Lower frameskip makes better maps but takes longer
aco_training(env, num_ants = 10, iterations=200, pheromone_deposit = 8.0, run_dir=run_dir, log_dir=log_dir, maps_dir=maps_dir, alpha = 0.7, beta = 0.3) #Run ACO training

available_buttons =
	{
		MOVE_FORWARD
		MOVE_LEFT
		MOVE_RIGHT
		MOVE_BACKWARD
	}

# Game variables that will be in the state
available_game_variables = { POSITION_X POSITION_Y ANGLE VELOCITY_X VELOCITY_Y } 

Same as run 10 except logic updated so that we now account for the angle the doomguy starts at (was not doing this before which was bad), and we account for the velocity of the doomguy.
This implementation still has some issues and the simulated move function isnt perfect but it is better than before. 
Also, when we track the path, we interpolate it. This is because due to frameskip and doom physics we usually dont move from one cell to a connected cell at the end of any given step,
we usually have traversed multiple cells.
This adds significant overhead, so we decrease the amount of iterations.
Also, logging in success_coounts is improved so it now tracks the overall sucessful routes and the succesful routes of a given iteration.

NOTABLE FIND, it seems like with this new method, simulate move can reliably predict where doomguy will be after a given move (like getting within a margin of error of 3 cells 90% of the time),
but only at frameskip 1, it gets less and less accurate as you raise frameskip, this is probably due to the velocity changing in real time. 

Because we can't go to frameskip 1, we have to find an alternative way of calculating the simulated moves while accounting for frameskip.

RESULT: See info13